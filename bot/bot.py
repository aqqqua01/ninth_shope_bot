#!/usr/bin/env python3
"""
Steam Top-Up Telegram Bot
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è Steam —á–µ—Ä–µ–∑ Telegram WebApp
"""

import os
import json
import logging
import hashlib
import hmac
from datetime import datetime
from decimal import Decimal, ROUND_HALF_UP
from urllib.parse import parse_qsl

from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')
FORWARD_CHAT_ID = os.getenv('FORWARD_CHAT_ID')
PAYMENT_DETAILS = os.getenv('PAYMENT_DETAILS', '–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
CURRENCY = os.getenv('CURRENCY', '–†–£–ë')
WEBAPP_URL = os.getenv('WEBAPP_URL')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not BOT_TOKEN:
    logger.error("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

if not ADMIN_CHAT_ID:
    logger.error("ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

if not WEBAPP_URL:
    logger.warning("WEBAPP_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - WebApp –∫–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç–∞")


def verify_webapp_data(init_data: str, bot_token: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö WebApp —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Telegram
    """
    try:
        parsed_data = dict(parse_qsl(init_data))
        data_check_string_parts = []
        
        for key, value in sorted(parsed_data.items()):
            if key != 'hash':
                data_check_string_parts.append(f"{key}={value}")
        
        data_check_string = '\n'.join(data_check_string_parts)
        secret_key = hmac.new(b"WebAppData", bot_token.encode(), hashlib.sha256).digest()
        calculated_hash = hmac.new(secret_key, data_check_string.encode(), hashlib.sha256).hexdigest()
        
        return calculated_hash == parsed_data.get('hash')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ WebApp –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False


def parse_amount(amount_str: str) -> Decimal:
    """
    –ü–∞—Ä—Å–∏—Ç –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    """
    try:
        # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
        amount_str = amount_str.replace(',', '.')
        amount = Decimal(amount_str)
        
        if amount < 100:
            raise ValueError("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 100 —Ä—É–±–ª–µ–π")
        
        # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        return amount.quantize(Decimal('0.01'), rounding=ROUND_HALF_UP)
    except (ValueError, TypeError) as e:
        raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞: {e}")


def calculate_total(base_amount: Decimal) -> Decimal:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ —Å –∫–æ–º–∏—Å—Å–∏–µ–π +15%
    """
    total = base_amount * Decimal('1.15')
    return total.quantize(Decimal('0.01'), rounding=ROUND_HALF_UP)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    welcome_message = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        f"–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å Steam –∫–æ—à–µ–ª–µ–∫.\n"
        f"–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å WebApp –∫–Ω–æ–ø–∫–æ–π –µ—Å–ª–∏ URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    if WEBAPP_URL:
        keyboard = [
            [KeyboardButton(
                "üéÆ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", 
                web_app=WebAppInfo(url=WEBAPP_URL)
            )]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    else:
        welcome_message += "\n‚ö†Ô∏è WebApp –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        reply_markup = None
    
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "ü§ñ <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é\n"
        "/admin - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        "üí° <b>–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å Steam:</b>\n"
        "1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'\n"
        "2. –ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –æ–∫–Ω–µ\n"
        "3. –ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–∫–∞–∑\n"
        "4. –ü–µ—Ä–µ–≤–µ–¥–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º\n"
        "5. –û–∂–∏–¥–∞–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–æ–±—ã—á–Ω–æ –¥–æ 30 –º–∏–Ω—É—Ç)\n\n"
        f"üí∞ –í–∞–ª—é—Ç–∞: {CURRENCY}\n"
        f"üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 100 {CURRENCY}"
    )
    
    await update.message.reply_text(help_text, parse_mode='HTML')


async def cancel_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel"""
    await update.message.reply_text(
        "‚ùå –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n"
        "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /start"
    )


async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    user = update.effective_user
    chat = update.effective_chat
    
    admin_info = (
        f"üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</b>\n"
        f"User ID: <code>{user.id}</code>\n"
        f"Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"–ò–º—è: {user.full_name}\n\n"
        f"üí¨ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:</b>\n"
        f"Chat ID: <code>{chat.id}</code>\n"
        f"–¢–∏–ø —á–∞—Ç–∞: {chat.type}"
    )
    
    await update.message.reply_text(admin_info, parse_mode='HTML')


async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp"""
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        raw_data = update.message.web_app_data.data
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã —Å—ã—Ä—ã–µ WebApp –¥–∞–Ω–Ω—ã–µ: {raw_data}")
        
        # –í–†–ï–ú–ï–ù–ù–û: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        # TODO: –≤–∫–ª—é—á–∏—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
        # if not verify_webapp_data(update.message.web_app_data.data, BOT_TOKEN):
        #     logger.warning(f"–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ WebApp –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
        #     await update.message.reply_text(
        #         "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        #     )
        #     return
        
        # –ü–∞—Ä—Å–∏–º JSON –¥–∞–Ω–Ω—ã–µ
        data = json.loads(update.message.web_app_data.data)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã WebApp –¥–∞–Ω–Ω—ã–µ: {data}")
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        steam_login = data.get('steam_login', '').strip()
        if not steam_login:
            await update.message.reply_text(
                "‚ùå –õ–æ–≥–∏–Ω Steam –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
            return
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        try:
            base_amount = parse_amount(str(data.get('base_amount', 0)))
            to_pay = calculate_total(base_amount)
        except ValueError as e:
            await update.message.reply_text(f"‚ùå {e}")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_message = (
            f"‚úÖ <b>–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
            f"üéÆ –õ–æ–≥–∏–Ω Steam: <code>{steam_login}</code>\n"
            f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {base_amount} {CURRENCY}\n"
            f"üí≥ –ö –æ–ø–ª–∞—Ç–µ (+15%): <b>{to_pay} {CURRENCY}</b>\n\n"
            f"üí≥ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</b>\n"
            f"<code>{PAYMENT_DETAILS}</code>\n\n"
            f"‚è≥ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.\n"
            f"‚ùì –í–æ–ø—Ä–æ—Å—ã? –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        
        await update.message.reply_text(user_message, parse_mode='HTML')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        user = update.effective_user
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
        keyboard = [
            [InlineKeyboardButton(
                "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", 
                callback_data=f"completed_{user.id}_{update.effective_chat.id}_{base_amount}_{steam_login}"
            )]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        admin_message = (
            f"üîî <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ü–û–ü–û–õ–ù–ï–ù–ò–ï</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {timestamp}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (@{user.username or '–±–µ–∑ username'})\n"
            f"üÜî User ID: <code>{user.id}</code>\n"
            f"üí¨ Chat ID: <code>{update.effective_chat.id}</code>\n\n"
            f"üìã <b>–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:</b>\n"
            f"üéÆ –õ–æ–≥–∏–Ω Steam: <code>{steam_login}</code>\n"
            f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {base_amount} {CURRENCY}\n"
            f"üí≥ –ö –æ–ø–ª–∞—Ç–µ: <b>{to_pay} {CURRENCY}</b>\n\n"
            f"üìä <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
            f"<code>{json.dumps(data, ensure_ascii=False, indent=2)}</code>"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω —á–∞—Ç
        if ADMIN_CHAT_ID:
            try:
                await context.bot.send_message(
                    chat_id=ADMIN_CHAT_ID,
                    text=admin_message,
                    parse_mode='HTML',
                    reply_markup=reply_markup
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∞–¥–º–∏–Ω —á–∞—Ç: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Ç –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        if FORWARD_CHAT_ID:
            try:
                await context.bot.send_message(
                    chat_id=FORWARD_CHAT_ID,
                    text=admin_message,
                    parse_mode='HTML',
                    reply_markup=reply_markup
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Ç: {e}")
        
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {steam_login}, {base_amount} {CURRENCY}")
        
    except json.JSONDecodeError:
        logger.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp")
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ WebApp –¥–∞–Ω–Ω—ã—Ö: {e}")
        await update.message.reply_text(
            "‚ùå –£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


async def handle_completion_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–í—ã–ø–æ–ª–Ω–µ–Ω–æ'"""
    query = update.callback_query
    await query.answer()
    
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
        _, user_id, chat_id, amount, steam_login = query.data.split('_', 4)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        completion_message = (
            f"‚úÖ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!</b>\n\n"
            f"üéÆ –õ–æ–≥–∏–Ω Steam: <code>{steam_login}</code>\n"
            f"üí∞ –°—É–º–º–∞: {amount} {CURRENCY}\n\n"
            f"üí° –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç.\n"
            f"‚ùì –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        
        await context.bot.send_message(
            chat_id=int(chat_id),
            text=completion_message,
            parse_mode='HTML'
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        await query.edit_message_text(
            text=f"{query.message.text}\n\n‚úÖ <b>–°–¢–ê–¢–£–°: –í–´–ü–û–õ–ù–ï–ù–û</b>",
            parse_mode='HTML'
        )
        
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {e}")
        await query.edit_message_text(
            text=f"{query.message.text}\n\n‚ùå <b>–û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>",
            parse_mode='HTML'
        )


async def handle_unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await update.message.reply_text(
        "ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
    )


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ Steam Top-Up Bot...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("cancel", cancel_command))
    application.add_handler(CommandHandler("admin", admin_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ WebApp –¥–∞–Ω–Ω—ã—Ö
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
    application.add_handler(CallbackQueryHandler(handle_completion_callback, pattern="^completed_"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_unknown_message))
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()
